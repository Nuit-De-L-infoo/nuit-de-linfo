version: "3.8"

services:
  frontend:
    build:
      context: web
    container_name: web
    ports:
      - "3020:3000"
    volumes:
      - ./web/app:/app/app
    restart: unless-stopped
    networks:
      - monitoring
      - app-network

  api:
    build:
      context: api
    container_name: api
    ports:
      - "5000:5000"
    volumes:
      - ./api:/app
    env_file:
      - .env
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
    restart: unless-stopped
    networks:
      - monitoring
      - app-network
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/alerts.yml:/etc/prometheus/alerts.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - monitoring
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/etc/grafana/dashboards
    ports:
      - "3000:3000"
    networks:
      - monitoring
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    networks:
      - monitoring
    command:
      - '--path.rootfs=/host'
    volumes:
      - /:/host:ro

  carbon_exporter:
    image: prom/node-exporter:latest
    container_name: carbon_exporter
    command:
      - '--collector.textfile.directory=/metrics'
      - '--collector.carbon_impact'
    volumes:
      - ./monitoring/carbon_metrics:/metrics:ro
    ports:
      - "9110:9100"
    networks:
      - monitoring

volumes:
  prometheus_data:
  grafana_data:

networks:
  monitoring:
    driver: bridge
  app-network:
    driver: bridge
